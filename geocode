#!/usr/bin/env python2
# -*- coding: utf-8 -*-
from ConfigParser import ConfigParser
from os import path
from os import environ

if path.exists('./config/wsgi.cfg'):
    config = ConfigParser()
    config.read('./config/wsgi.cfg')

    for key in config.options('env'):
        environ[key.upper()] = config.get('env', key)

import sys
sys.path.insert(0, environ['GEOCODE_DIR'])

def carregar_ambiente_virtual():
    activate_this = path.join(environ['GEOCODE_DIR'], 'venv/bin/activate_this.py')
    with open(activate_this) as file_:
        exec(file_.read(), dict(__file__=activate_this))


# Apaga base se executar da linha de comando.
if __name__ == '__main__':
    import click
    @click.command(name = 'geocode', add_help_option = False)
    @click.option('--rebuild', is_flag = True, help = 'Reconstroi base de dados de busca.')
    @click.option('--server', is_flag = True, help = 'Inicia servidor localmente e em modo DEBUG.')
    def comando(rebuild, server):
        """Executando geocode em linha de comando permite outros modos de operação."""
        if rebuild or server:
            if rebuild:
                from modelos import apagar_base, criar_base
                apagar_base()
                criar_base()
            if server:
                carregar_ambiente_virtual()
                from app import create_app
                app = create_app()
                app.run(debug = true)

        else:
            click.echo(click.get_current_context().get_help())

    comando()

else:
    carregar_ambiente_virtual()
    from app import create_app
    application = create_app()

